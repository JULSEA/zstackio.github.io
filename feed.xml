<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ZStack</title>
    <description>ZStack is open source IaaS software managing resources of compute, storage, networking throughout a datacenter all by APIs.</description>
    <link>http://zstack.org/</link>
    <atom:link href="http://zstack.org/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Mon, 27 Jul 2015 00:26:09 -0700</pubDate>
    <lastBuildDate>Mon, 27 Jul 2015 00:26:09 -0700</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Announcing ZStack v0.8 RC2</title>
        <description>&lt;p&gt;Hello everyone, I am Frank Zhang, the architect of ZStack. Today I am happy to announce that ZStack v0.8 is in the release cycle.
Today we release 0.8 RC2 for you test. In this release, ZStack introduces four new features:&lt;/p&gt;

&lt;h2&gt;Local Primary Storage&lt;/h2&gt;

&lt;p&gt;Users can use local disks of hosts as primary storage.&lt;/p&gt;

&lt;h3&gt;Add through UI&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.8/localstorage.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;select the type to 'LocalStorage'&lt;/li&gt;
&lt;li&gt;input the hosts' folder path.&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Add through CLI&lt;/h3&gt;

&lt;p&gt;You can use AddLocalPrimaryStorage to add the local primary storage. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AddLocalPrimaryStorage zoneUuid=15d546efe84a499caa36b2f6a95d6b81 name=local url=/home/volumes
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;bs-callout bs-callout-default&quot;&gt;
  &lt;h4&gt;URL&lt;/h4&gt;
  
  The local primary storage uses a folder to store VM volumes and images on hosts. When being attached to a cluster,
  the folder specified by the URL will be created on all hosts in the cluster if not existing.
&lt;/div&gt;




&lt;div class=&quot;bs-callout bs-callout-default&quot;&gt;
  &lt;h4&gt;Capacity&lt;/h4&gt;
  
  The total capacity and available capacity are summed from the corresponding capacity of each hosts. Unlike pool-based
  primary storage(e.g. NFS), you may encounter an allocation failure(not enough capacity) even if the total available capacity is bigger than
  the capacity you ask, because no host can solely provide that capacity. For example, say you have 2 hosts each of which has 10G available
  capacity, and you are creating a 15G volume; though the total available capacity is 20G, the case will fail because each host cannot
  provide the 15G capacity.
&lt;/div&gt;




&lt;div class=&quot;bs-callout bs-callout-warning&quot;&gt;
  &lt;h4&gt;No live migration and limited volume attaching&lt;/h4&gt;
  
  Because local primary storage is not network shared storage, it's not possible to lively migrate a VM from one host to another 
  until the storage migration feature is supported in future ZStack releases. Data volumes, whose states are Ready, can only be
  attached to VMs on the same host; that is to say, once a data volume is instantiated on a local storage, it can only be attached
  to VMs on the same host where it is instantiated.
&lt;/div&gt;


&lt;h2&gt;Dynamically attaching/detaching L3 networks&lt;/h2&gt;

&lt;p&gt;Beginning at this version, users can dynamically attach/detach a L3 network to/from a VM.&lt;/p&gt;

&lt;h3&gt;Attach through UI&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.8/2.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;select a VM and click button 'Action'&lt;/li&gt;
&lt;li&gt;click 'Attach L3 Network' on the drop-down menu&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;img src=&quot;../../images/0.8/3.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;select the L3 networks you want to attach&lt;/li&gt;
&lt;li&gt;click button 'Attach'&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Attach through CLI&lt;/h3&gt;

&lt;p&gt;You can use AttachL3NetworkToVm to attach a L3 network to a VM. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;AttachL3NetworkToVm l3NetworkUuid=d791a3f662ac48a99b9e998136eed2a1 vmInstanceUuid=15d546efe84a499caa36b2f6a95d6b81
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Detach through UI&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.8/4.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;select a VM and click button 'Action'&lt;/li&gt;
&lt;li&gt;click 'Detach L3 Network' on the drop-down menu&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;img src=&quot;../../images/0.8/5.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;select the L3 networks you want to detach&lt;/li&gt;
&lt;li&gt;click button 'Detach'&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Detach through CLI&lt;/h3&gt;

&lt;p&gt;You can use &lt;code&gt;DetachL3NetworkFromVm&lt;/code&gt; to detach a L3 network from a VM. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;DetachL3NetworkFromVm vmNicUuid=d791a3f662ac48a99b9e998136eed2a1
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;VM Nic UUID&lt;/h4&gt;
  
  Instead of a L3 network UUID and a VM UUID, `the DetachL3NetworkFromVm`
  use the `vmNicUuid` as the parameter because it implies both VM UUID and
  L3 network UUID.
&lt;/div&gt;


&lt;h2&gt;Identity Management&lt;/h2&gt;

&lt;p&gt;In this version, ZStack opens the identity management APIs which provide similar functions to AWS IAM. The details
of the identity management system can be found in &lt;a href=&quot;http://zstackdoc.readthedocs.org/en/latest/userManual/identity.html&quot;&gt;user manual -- identity chapter&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Change the instance offering of the VM&lt;/h2&gt;

&lt;p&gt;In this version, users can change the instance offering of a VM.&lt;/p&gt;

&lt;h3&gt;Change through UI&lt;/h3&gt;

&lt;p&gt;Not implemented in RC2, will be available in the GA release&lt;/p&gt;

&lt;h3&gt;Change through CLI&lt;/h3&gt;

&lt;p&gt;You can use ChangeInstanceOffering to change the instance offering of a VM. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;ChangeInstanceOffering vmInstanceUuid=f9837cfbde574a7ab512ab3283d8da60 vmInstanceUuid=d791a3f662ac48a99b9e998136eed2a1
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;A stop/start is required&lt;/h4&gt;
  
  If you change the instance offering while the VM is running, you need to stop/start the VM to make the change takes effect.
&lt;/div&gt;


&lt;h2&gt;Seamless Upgrade&lt;/h2&gt;

&lt;div class=&quot;bs-callout bs-callout-warning&quot;&gt;
  &lt;h4&gt;Backup Database&lt;/h4&gt;
  
  Before performing any upgrade instructions, please backup the current database. This is very &lt;b&gt;IMPORTANT&lt;/b&gt;!
  Though ZStack will automatically backup the current database during upgrade, we strongly recommend you to manually backup the
  database in case any error happens. You can backup the database following:
  
  &lt;pre&gt;&lt;code&gt;mysqldump -u root -proot_password --host mysql_ip --port mysql_port zstack &gt; path_to_db_dump.sql&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Upgrade by quick script&lt;/h3&gt;

&lt;p&gt;If you have only one management node, you can upgrade it by ZStack's installation script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl stop_node
wget --no-check-certificate https://download.zstack.org/releases/0.8/rc2/zstack-install-0.8.0-rc2.sh
wget --no-check-certificate https://download.zstack.org/releases/0.8/rc2/zstack-all-in-one-0.8.0-rc2.tgz
bash zstack-install-0.8.0-rc2.sh -u -f zstack-all-in-one-0.8.0-rc2.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Be patient for a few minutes, the script will upgrade the database, management node, zstack-cli, zstack-ctl and zstack-dashboard.&lt;/p&gt;

&lt;h3&gt;Upgrade by zstack-ctl&lt;/h3&gt;

&lt;h4&gt;1. Upgrade the first management node&lt;/h4&gt;

&lt;p&gt;Perform below instructions on one of your management node:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p zstack-0.8
cd zstack-0.8
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;Install zstack-ctl if you are using 0.6 version&lt;/h4&gt;
  
  wget --no-check-certificate https://download.zstack.org/releases/0.7/rc2/zstackctl-0.7.tar.gz
  /var/lib/zstack/virtualenv/zstackctl/bin/pip install --ignore-installed zstackctl-0.7.tar.gz
  
&lt;/div&gt;


&lt;pre&gt;&lt;code&gt;wget --no-check-certificate https://download.zstack.org/releases/0.8/rc2/zstack.war
zstack-ctl upgrade_management_node --war-file zstack.war
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;2. Upgrade the database&lt;/h4&gt;

&lt;p&gt;Make sure you have backup the current database following instructions on the top of this page. Then perform:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_db
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;You can start the node now if you only have one management node&lt;/h4&gt;
  If you have only one management node, you can run &lt;pre&gt;&lt;code&gt;zstack-ctl start_node&lt;/code&gt;&lt;/pre&gt; to start the ZStack now. If you have
  other management nodes to upgrade, continue to perform following instructions.
&lt;/div&gt;


&lt;h4&gt;3. Upgrade other management nodes&lt;/h4&gt;

&lt;p&gt;If you have management nodes running on remote machines, run below commands for each node&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_management_node --war-file path_to_the_war --host remote_host_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;4. Upgrade UI&lt;/h4&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;Stop UI&lt;/h4&gt;
  
  If you are using 0.6, stop the UI by &lt;code&gt;/etc/init.d/zstack-dashboard stop&lt;/code&gt;; if 0.7, stop the UI by &lt;code&gt;zstack-ctl stop_ui&lt;/code&gt;
&lt;/div&gt;


&lt;p&gt;Upgrade your UI on local machine by:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui --host remote_machine_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if the UI is installed on a remote machine.&lt;/p&gt;

&lt;h4&gt;5. Start management nodes&lt;/h4&gt;

&lt;p&gt;Now all your management nodes have been successfully upgraded to the 0.8 RC2. You can start them by &lt;code&gt;zstack-ctl start_node&lt;/code&gt; and
&lt;code&gt;zstack-ctl start_node --host remote_host_ip&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;Agents will be automatically upgraded after starting management nodes&lt;/h4&gt;
  You don't need to bother with agent upgrade; they will be upgraded after management nodes reconnect them.
&lt;/div&gt;


&lt;h4&gt;6. Start UI&lt;/h4&gt;

&lt;p&gt;Now you can start the UI by &lt;code&gt;zstack-ctl start_ui&lt;/code&gt; on the local host or &lt;code&gt;zstack-ctl start_ui --host remote_host_ip&lt;/code&gt; on the remote host.&lt;/p&gt;

&lt;h2&gt;Bug Report&lt;/h2&gt;

&lt;p&gt;If you find any bugs, please open a ticket on &lt;a href=&quot;https://github.com/zstackorg/zstack/issues&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://zstack.org/cn/blog/v0.8-rc2.html</link>
        <guid isPermaLink="true">http://zstack.org/cn/blog/v0.8-rc2.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Announcing ZStack v0.8 RC2</title>
        <description>&lt;p&gt;Hello everyone, I am Frank Zhang, the architect of ZStack. Today I am happy to announce that ZStack v0.8 is in the release cycle.
Today we release 0.8 RC2 for you test. In this release, ZStack introduces four new features:&lt;/p&gt;

&lt;h2&gt;Local Primary Storage&lt;/h2&gt;

&lt;p&gt;Users can use local disks of hosts as primary storage.&lt;/p&gt;

&lt;h3&gt;Add through UI&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.8/localstorage.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;select the type to 'LocalStorage'&lt;/li&gt;
&lt;li&gt;input the hosts' folder path.&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Add through CLI&lt;/h3&gt;

&lt;p&gt;You can use AddLocalPrimaryStorage to add the local primary storage. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;AddLocalPrimaryStorage zoneUuid=15d546efe84a499caa36b2f6a95d6b81 name=local url=/home/volumes
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;bs-callout bs-callout-default&quot;&gt;
  &lt;h4&gt;URL&lt;/h4&gt;
  
  The local primary storage uses a folder to store VM volumes and images on hosts. When being attached to a cluster,
  the folder specified by the URL will be created on all hosts in the cluster if not existing.
&lt;/div&gt;




&lt;div class=&quot;bs-callout bs-callout-default&quot;&gt;
  &lt;h4&gt;Capacity&lt;/h4&gt;
  
  The total capacity and available capacity are summed from the corresponding capacity of each hosts. Unlike pool-based
  primary storage(e.g. NFS), you may encounter an allocation failure(not enough capacity) even if the total available capacity is bigger than
  the capacity you ask, because no host can solely provide that capacity. For example, say you have 2 hosts each of which has 10G available
  capacity, and you are creating a 15G volume; though the total available capacity is 20G, the case will fail because each host cannot
  provide the 15G capacity.
&lt;/div&gt;




&lt;div class=&quot;bs-callout bs-callout-warning&quot;&gt;
  &lt;h4&gt;No live migration and limited volume attaching&lt;/h4&gt;
  
  Because local primary storage is not network shared storage, it's not possible to lively migrate a VM from one host to another 
  until the storage migration feature is supported in future ZStack releases. Data volumes, whose states are Ready, can only be
  attached to VMs on the same host; that is to say, once a data volume is instantiated on a local storage, it can only be attached
  to VMs on the same host where it is instantiated.
&lt;/div&gt;


&lt;h2&gt;Dynamically attaching/detaching L3 networks&lt;/h2&gt;

&lt;p&gt;Beginning at this version, users can dynamically attach/detach a L3 network to/from a VM.&lt;/p&gt;

&lt;h3&gt;Attach through UI&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.8/2.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;select a VM and click button 'Action'&lt;/li&gt;
&lt;li&gt;click 'Attach L3 Network' on the drop-down menu&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;img src=&quot;../../images/0.8/3.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;select the L3 networks you want to attach&lt;/li&gt;
&lt;li&gt;click button 'Attach'&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Attach through CLI&lt;/h3&gt;

&lt;p&gt;You can use AttachL3NetworkToVm to attach a L3 network to a VM. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;AttachL3NetworkToVm l3NetworkUuid=d791a3f662ac48a99b9e998136eed2a1 vmInstanceUuid=15d546efe84a499caa36b2f6a95d6b81
&lt;/code&gt;&lt;/pre&gt;

&lt;h3&gt;Detach through UI&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.8/4.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;select a VM and click button 'Action'&lt;/li&gt;
&lt;li&gt;click 'Detach L3 Network' on the drop-down menu&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;&lt;img src=&quot;../../images/0.8/5.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;select the L3 networks you want to detach&lt;/li&gt;
&lt;li&gt;click button 'Detach'&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;Detach through CLI&lt;/h3&gt;

&lt;p&gt;You can use &lt;code&gt;DetachL3NetworkFromVm&lt;/code&gt; to detach a L3 network from a VM. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;DetachL3NetworkFromVm vmNicUuid=d791a3f662ac48a99b9e998136eed2a1
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;VM Nic UUID&lt;/h4&gt;
  
  Instead of a L3 network UUID and a VM UUID, `the DetachL3NetworkFromVm`
  use the `vmNicUuid` as the parameter because it implies both VM UUID and
  L3 network UUID.
&lt;/div&gt;


&lt;h2&gt;Identity Management&lt;/h2&gt;

&lt;p&gt;In this version, ZStack opens the identity management APIs which provide similar functions to AWS IAM. The details
of the identity management system can be found in &lt;a href=&quot;http://zstackdoc.readthedocs.org/en/latest/userManual/identity.html&quot;&gt;user manual -- identity chapter&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Change the instance offering of the VM&lt;/h2&gt;

&lt;p&gt;In this version, users can change the instance offering of a VM.&lt;/p&gt;

&lt;h3&gt;Change through UI&lt;/h3&gt;

&lt;p&gt;Not implemented in RC2, will be available in the GA release&lt;/p&gt;

&lt;h3&gt;Change through CLI&lt;/h3&gt;

&lt;p&gt;You can use ChangeInstanceOffering to change the instance offering of a VM. For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;ChangeInstanceOffering vmInstanceUuid=f9837cfbde574a7ab512ab3283d8da60 vmInstanceUuid=d791a3f662ac48a99b9e998136eed2a1
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;A stop/start is required&lt;/h4&gt;
  
  If you change the instance offering while the VM is running, you need to stop/start the VM to make the change takes effect.
&lt;/div&gt;


&lt;h2&gt;Seamless Upgrade&lt;/h2&gt;

&lt;div class=&quot;bs-callout bs-callout-warning&quot;&gt;
  &lt;h4&gt;Backup Database&lt;/h4&gt;
  
  Before performing any upgrade instructions, please backup the current database. This is very &lt;b&gt;IMPORTANT&lt;/b&gt;!
  Though ZStack will automatically backup the current database during upgrade, we strongly recommend you to manually backup the
  database in case any error happens. You can backup the database following:
  
  &lt;pre&gt;&lt;code&gt;mysqldump -u root -proot_password --host mysql_ip --port mysql_port zstack &gt; path_to_db_dump.sql&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Upgrade by quick script&lt;/h3&gt;

&lt;p&gt;If you have only one management node, you can upgrade it by ZStack's installation script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl stop_node
wget --no-check-certificate https://download.zstack.org/releases/0.8/rc2/zstack-install-0.8.0-rc2.sh
wget --no-check-certificate https://download.zstack.org/releases/0.8/rc2/zstack-all-in-one-0.8.0-rc2.tgz
bash zstack-install-0.8.0-rc2.sh -u -f zstack-all-in-one-0.8.0-rc2.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Be patient for a few minutes, the script will upgrade the database, management node, zstack-cli, zstack-ctl and zstack-dashboard.&lt;/p&gt;

&lt;h3&gt;Upgrade by zstack-ctl&lt;/h3&gt;

&lt;h4&gt;1. Upgrade the first management node&lt;/h4&gt;

&lt;p&gt;Perform below instructions on one of your management node:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p zstack-0.8
cd zstack-0.8
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;Install zstack-ctl if you are using 0.6 version&lt;/h4&gt;
  
  wget --no-check-certificate https://download.zstack.org/releases/0.7/rc2/zstackctl-0.7.tar.gz
  /var/lib/zstack/virtualenv/zstackctl/bin/pip install --ignore-installed zstackctl-0.7.tar.gz
  
&lt;/div&gt;


&lt;pre&gt;&lt;code&gt;wget --no-check-certificate https://download.zstack.org/releases/0.8/rc2/zstack.war
zstack-ctl upgrade_management_node --war-file zstack.war
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;2. Upgrade the database&lt;/h4&gt;

&lt;p&gt;Make sure you have backup the current database following instructions on the top of this page. Then perform:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_db
&lt;/code&gt;&lt;/pre&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;You can start the node now if you only have one management node&lt;/h4&gt;
  If you have only one management node, you can run &lt;pre&gt;&lt;code&gt;zstack-ctl start_node&lt;/code&gt;&lt;/pre&gt; to start the ZStack now. If you have
  other management nodes to upgrade, continue to perform following instructions.
&lt;/div&gt;


&lt;h4&gt;3. Upgrade other management nodes&lt;/h4&gt;

&lt;p&gt;If you have management nodes running on remote machines, run below commands for each node&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_management_node --war-file path_to_the_war --host remote_host_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;4. Upgrade UI&lt;/h4&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;Stop UI&lt;/h4&gt;
  
  If you are using 0.6, stop the UI by &lt;code&gt;/etc/init.d/zstack-dashboard stop&lt;/code&gt;; if 0.7, stop the UI by &lt;code&gt;zstack-ctl stop_ui&lt;/code&gt;
&lt;/div&gt;


&lt;p&gt;Upgrade your UI on local machine by:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui --host remote_machine_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if the UI is installed on a remote machine.&lt;/p&gt;

&lt;h4&gt;5. Start management nodes&lt;/h4&gt;

&lt;p&gt;Now all your management nodes have been successfully upgraded to the 0.8 RC2. You can start them by &lt;code&gt;zstack-ctl start_node&lt;/code&gt; and
&lt;code&gt;zstack-ctl start_node --host remote_host_ip&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;Agents will be automatically upgraded after starting management nodes&lt;/h4&gt;
  You don't need to bother with agent upgrade; they will be upgraded after management nodes reconnect them.
&lt;/div&gt;


&lt;h4&gt;6. Start UI&lt;/h4&gt;

&lt;p&gt;Now you can start the UI by &lt;code&gt;zstack-ctl start_ui&lt;/code&gt; on the local host or &lt;code&gt;zstack-ctl start_ui --host remote_host_ip&lt;/code&gt; on the remote host.&lt;/p&gt;

&lt;h2&gt;Bug Report&lt;/h2&gt;

&lt;p&gt;If you find any bugs, please open a ticket on &lt;a href=&quot;https://github.com/zstackorg/zstack/issues&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://zstack.org/blog/v0.8-rc2.html</link>
        <guid isPermaLink="true">http://zstack.org/blog/v0.8-rc2.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Announcing ZStack v0.7.1</title>
        <description>&lt;p&gt;Hello everyone, I am Frank Zhang, the architect of ZStack. Today I am happy to announce that ZStack v0.7.0.1 is released. This release contains two bugs fixes. Both
for zstack-ctl, which may affect remote node installation on Ubuntu and DB upgrade if the database has password enabled.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://zstack.org/cn/blog/v0.7.1.html</link>
        <guid isPermaLink="true">http://zstack.org/cn/blog/v0.7.1.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Announcing ZStack v0.7.1</title>
        <description>&lt;p&gt;Hello everyone, I am Frank Zhang, the architect of ZStack. Today I am happy to announce that ZStack v0.7.0.1 is released. This release contains two bugs fixes. Both
for zstack-ctl, which may affect remote node installation on Ubuntu and DB upgrade if the database has password enabled.&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://zstack.org/blog/v0.7.1.html</link>
        <guid isPermaLink="true">http://zstack.org/blog/v0.7.1.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Announcing ZStack v0.7</title>
        <description>&lt;p&gt;Hello everyone, I am Frank Zhang, the architect of ZStack. Today I am happy to announce that ZStack v0.7.0 is released.&lt;/p&gt;

&lt;h2&gt;Seamless Upgrade&lt;/h2&gt;

&lt;p&gt;Beginning at 0.7, ZStack supports seamless upgrade from previous versions. You can upgrade your setup with simple commands in a few
minutes.&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-warning&quot;&gt;
  &lt;h4&gt;Backup Database&lt;/h4&gt;
  
  Before performing any upgrade instructions, please backup the current database. This is very &lt;b&gt;IMPORTANT&lt;/b&gt;!
  Though ZStack will automatically backup the current database during upgrade, we strongly recommend you to manually backup the
  database in case any error happens. You can backup the database following:
  
  &lt;pre&gt;&lt;code&gt;mysqldump -u root -proot_password --host mysql_ip --port mysql_port zstack &gt; path_to_db_dump.sql&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Upgrade by quick script&lt;/h3&gt;

&lt;p&gt;If you have only one management node, you can upgrade it by ZStack's installation script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl stop_node
wget --no-check-certificate https://download.zstack.org/releases/0.7/install.sh
wget --no-check-certificate https://download.zstack.org/releases/0.7/zstack-all-in-one-0.7.0.tgz
bash install.sh -u -f zstack-all-in-one-0.7.0.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Be patient for a few minutes, the script will upgrade the database, management node, zstack-cli, zstack-ctl and zstack-dashboard.&lt;/p&gt;

&lt;h3&gt;Upgrade by zstack-ctl&lt;/h3&gt;

&lt;h4&gt;1. Upgrade the first management node&lt;/h4&gt;

&lt;p&gt;Perform below instructions on one of your management node:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p zstack-0.7
cd zstack-0.7
wget --no-check-certificate https://download.zstack.org/releases/0.7/zstackctl-0.7.tar.gz
/var/lib/zstack/virtualenv/zstackctl/bin/pip install --ignore-installed zstackctl-0.7.tar.gz

wget --no-check-certificate https://download.zstack.org/releases/0.7/zstack.war
zstack-ctl upgrade_management_node --war-file zstack.war
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once it finishes, the management node, zstack-cli, zstack-ctl are upgraded on the machine. You should see the below picture:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/1.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;h4&gt;2. Upgrade the database&lt;/h4&gt;

&lt;p&gt;Make sure you have backup the current database following instructions on the top of this page. Then perform:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_db
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In a few seconds, you should see the below picture:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/2.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  If you have only one management node, you can run &lt;pre&gt;&lt;code&gt;zstack-ctl start_node&lt;/code&gt;&lt;/pre&gt; to start the ZStack now. If you have
  other management nodes to upgrade, continue to perform following instructions.
&lt;/div&gt;


&lt;h4&gt;3. Upgrade other management nodes&lt;/h4&gt;

&lt;p&gt;If you have management nodes running on remote machines, run below commands for each node&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_management_node --war-file path_to_the_war --host remote_host_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;4. Upgrade UI&lt;/h4&gt;

&lt;p&gt;Upgrade your UI on local machine by:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui --host remote_machine_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if the UI is installed on a remote machine.&lt;/p&gt;

&lt;h4&gt;5. Start management nodes&lt;/h4&gt;

&lt;p&gt;Now all your management nodes have been successfully upgraded to the 0.7. You can start them by &lt;code&gt;zstack-ctl start_node&lt;/code&gt; and
&lt;code&gt;zstack-ctl start_node --remote remote_host_ip&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;Agents will be automatically upgraded after starting management nodes&lt;/h4&gt;
  You don't need to bother with agent upgrade; they will be upgraded after management nodes reconnect them.
&lt;/div&gt;


&lt;h2&gt;Built-in PyPi Index&lt;/h2&gt;

&lt;p&gt;Many users reported that agents installation sometimes failed because the Python PyPi index was not always available.
In 0.7, we pull out all our Python dependencies and build a PyPi index inside the management node. All agents and tools
installation will NOT reply on the Python PyPi on the public network anymore. Because of that, the zstack.war gets much
bigger(~80M) than before; but we still think it's worthy, because it stable and fast the installation of agents and tools.&lt;/p&gt;

&lt;h2&gt;New ISCSI Primary Storage Support&lt;/h2&gt;

&lt;p&gt;The 0.7 version supports ISCSI as primary storage. The default ISCSI server is based on a Linux machine with a BTRFS filesystem.
Follow the &lt;a href=&quot;https://www.howtoforge.com/a-beginners-guide-to-btrfs&quot;&gt;tutorial&lt;/a&gt; to prepare a Linux machine with a BTRFS filesystem,
the following instructions assume the BTRFS filesystem is mounted on /home/btrfs&lt;/p&gt;

&lt;p&gt;On the UI, go to &quot;Primary Storage&quot; page then click the button &quot;New Primary Storage&quot; to add the ISCSI primary storage:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/3.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;After adding, double click the primary storage you can see detailed information:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/4.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;The BTRFS-ISCSI primary storage supports all features you can expect. For the volume snapshot, ZStack leverages the copy-on-write
feature of BTRFS; all snapshots are created individually, that is to say, every snapshot stays in a single snapshot tree that
has only one snapshot. Compared to the volume snapshot of NFS using KVM's snapshot function, the BTRFS-ISCSI snapshot does
not rely on hypervisors. You can achieve the live-snapshot with any version of KVM, which is only available in Ubuntu1404 while using
NFS volume snapshot, because the restriction of the libivirt version.&lt;/p&gt;

&lt;h2&gt;Static IP Support&lt;/h2&gt;

&lt;p&gt;The 0.7 version allows users to specify static IPs when creating a new VM. The RC2 UI hasn't supported this feature,
but you can achieve it using zstack-cli. This feature is implemented based on ZStack's system tag system. You can provide static
IPs by system tags in format of:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;staticIp::{l3NetworkUuid}::{IP}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CreateVmInstance name=vm l3NetworkUuids=979520f7953a4c8bb77f90afe3b3d398,825c78d5e5454e17a6357cb618d7d226 defaultL3NetworkUuid=979520f7953a4c8bb77f90afe3b3d398 instanceOfferingUuid=4ec815360b0745b5b34d279405c4fcd7 imageUuid=be97815edffd41b78a5d30cab6e1fc1b systemTags=staticIp::979520f7953a4c8bb77f90afe3b3d398::192.168.0.10,staticIp::825c78d5e5454e17a6357cb618d7d226::10.10.1.10
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Update APIs&lt;/h2&gt;

&lt;p&gt;The 0.7 version adds APIs to update information of every resource. The new APIs are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;APIUpdateVmInstanceMsg
APIUpdateImageMsg
APIUpdateVolumeMsg
APIUpdateInstanceOfferingMsg
APIUpdateDiskOfferingMsg
APIUpdatePrimaryStorageMsg
APIUpdateVolumeSnapshotMsg
APIUpdateBackupStorageMsg
APIUpdateL3NetworkMsg
APIUpdateIpRangeMsg
APIUpdateL2NetworkMsg
APIUpdateClusterMsg
APIUpdateZoneMsg
APIUpdateHostMsg
APIUpdateIscsiFileSystemBackendPrimaryStorageMsg
APIUpdateKVMHostMsg
APIUpdateSftpBackupStorageMsg
APIUpdatePortForwardingRuleMsg
APIUpdateEipMsg
APIUpdateSecurityGroupMsg
APIUpdateVipMsg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All these APIs are very straightforward; you can use &lt;code&gt;zstack-cli&lt;/code&gt; and type &lt;em&gt;Tab&lt;/em&gt; key to check out their parameters. Detailed
explanation will be given in the &lt;a href=&quot;http://zstackdoc.readthedocs.org/en/latest/&quot;&gt;user manual&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Bug Fixes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/60&quot;&gt;can not only query status field for VmInstance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/59&quot;&gt;IP arrange judgment has bug&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/54&quot;&gt;iscsi volume vm creation failure&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/50&quot;&gt;VM with iscsi volume can't be migrated in centos6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/47&quot;&gt;Delete iscsi volume snapshot failed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/46&quot;&gt;zstack management node shutdown due to: web listener issued context destroy event&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/45&quot;&gt;zstack management node start failure due to rabbitmq: Attempt to use closed channel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/42&quot;&gt;backup iscsi volume snapshot doesn't support CreateDataVolumeFromVolumeSnapshot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/40&quot;&gt;iscsi volume doesn't support backup volume snapshot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/26&quot;&gt;root volume's format is 'raw' if it's installed from ISO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/21&quot;&gt;Can not create guest vm from ISO image with iSCSI on Btrfs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/20&quot;&gt;Host status tracing has bug, which might wrongly change Host status from disconnected to connected&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/19&quot;&gt;primary storage capacity allocation and counting bug &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/17&quot;&gt;Feature Request: Primary Storage need to support iSCSI with backend filesystem BTRFS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/16&quot;&gt;Feature Request: Assign given IP (not DHCP random IP) to new created VM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/8&quot;&gt;Installation identify can't start management server for all-in-one&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Bug Report&lt;/h2&gt;

&lt;p&gt;If you find any bugs, please open a ticket on &lt;a href=&quot;https://github.com/zstackorg/zstack/issues&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://zstack.org/cn/blog/v0.7.html</link>
        <guid isPermaLink="true">http://zstack.org/cn/blog/v0.7.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Announcing ZStack v0.7</title>
        <description>&lt;p&gt;Hello everyone, I am Frank Zhang, the architect of ZStack. Today I am happy to announce that ZStack v0.7.0 is released.&lt;/p&gt;

&lt;h2&gt;Seamless Upgrade&lt;/h2&gt;

&lt;p&gt;Beginning at 0.7, ZStack supports seamless upgrade from previous versions. You can upgrade your setup with simple commands in a few
minutes.&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-warning&quot;&gt;
  &lt;h4&gt;Backup Database&lt;/h4&gt;
  
  Before performing any upgrade instructions, please backup the current database. This is very &lt;b&gt;IMPORTANT&lt;/b&gt;!
  Though ZStack will automatically backup the current database during upgrade, we strongly recommend you to manually backup the
  database in case any error happens. You can backup the database following:
  
  &lt;pre&gt;&lt;code&gt;mysqldump -u root -proot_password --host mysql_ip --port mysql_port zstack &gt; path_to_db_dump.sql&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Upgrade by quick script&lt;/h3&gt;

&lt;p&gt;If you have only one management node, you can upgrade it by ZStack's installation script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl stop_node
wget --no-check-certificate https://download.zstack.org/releases/0.7/install.sh
wget --no-check-certificate https://download.zstack.org/releases/0.7/zstack-all-in-one-0.7.0.tgz
bash install.sh -u -f zstack-all-in-one-0.7.0.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Be patient for a few minutes, the script will upgrade the database, management node, zstack-cli, zstack-ctl and zstack-dashboard.&lt;/p&gt;

&lt;h3&gt;Upgrade by zstack-ctl&lt;/h3&gt;

&lt;h4&gt;1. Upgrade the first management node&lt;/h4&gt;

&lt;p&gt;Perform below instructions on one of your management node:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p zstack-0.7
cd zstack-0.7
wget --no-check-certificate https://download.zstack.org/releases/0.7/zstackctl-0.7.tar.gz
/var/lib/zstack/virtualenv/zstackctl/bin/pip install --ignore-installed zstackctl-0.7.tar.gz

wget --no-check-certificate https://download.zstack.org/releases/0.7/zstack.war
zstack-ctl upgrade_management_node --war-file zstack.war
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once it finishes, the management node, zstack-cli, zstack-ctl are upgraded on the machine. You should see the below picture:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/1.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;h4&gt;2. Upgrade the database&lt;/h4&gt;

&lt;p&gt;Make sure you have backup the current database following instructions on the top of this page. Then perform:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_db
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In a few seconds, you should see the below picture:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/2.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  If you have only one management node, you can run &lt;pre&gt;&lt;code&gt;zstack-ctl start_node&lt;/code&gt;&lt;/pre&gt; to start the ZStack now. If you have
  other management nodes to upgrade, continue to perform following instructions.
&lt;/div&gt;


&lt;h4&gt;3. Upgrade other management nodes&lt;/h4&gt;

&lt;p&gt;If you have management nodes running on remote machines, run below commands for each node&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_management_node --war-file path_to_the_war --host remote_host_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;4. Upgrade UI&lt;/h4&gt;

&lt;p&gt;Upgrade your UI on local machine by:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui --host remote_machine_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if the UI is installed on a remote machine.&lt;/p&gt;

&lt;h4&gt;5. Start management nodes&lt;/h4&gt;

&lt;p&gt;Now all your management nodes have been successfully upgraded to the 0.7. You can start them by &lt;code&gt;zstack-ctl start_node&lt;/code&gt; and
&lt;code&gt;zstack-ctl start_node --remote remote_host_ip&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;Agents will be automatically upgraded after starting management nodes&lt;/h4&gt;
  You don't need to bother with agent upgrade; they will be upgraded after management nodes reconnect them.
&lt;/div&gt;


&lt;h2&gt;Built-in PyPi Index&lt;/h2&gt;

&lt;p&gt;Many users reported that agents installation sometimes failed because the Python PyPi index was not always available.
In 0.7, we pull out all our Python dependencies and build a PyPi index inside the management node. All agents and tools
installation will NOT reply on the Python PyPi on the public network anymore. Because of that, the zstack.war gets much
bigger(~80M) than before; but we still think it's worthy, because it stable and fast the installation of agents and tools.&lt;/p&gt;

&lt;h2&gt;New ISCSI Primary Storage Support&lt;/h2&gt;

&lt;p&gt;The 0.7 version supports ISCSI as primary storage. The default ISCSI server is based on a Linux machine with a BTRFS filesystem.
Follow the &lt;a href=&quot;https://www.howtoforge.com/a-beginners-guide-to-btrfs&quot;&gt;tutorial&lt;/a&gt; to prepare a Linux machine with a BTRFS filesystem,
the following instructions assume the BTRFS filesystem is mounted on /home/btrfs&lt;/p&gt;

&lt;p&gt;On the UI, go to &quot;Primary Storage&quot; page then click the button &quot;New Primary Storage&quot; to add the ISCSI primary storage:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/3.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;After adding, double click the primary storage you can see detailed information:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/4.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;The BTRFS-ISCSI primary storage supports all features you can expect. For the volume snapshot, ZStack leverages the copy-on-write
feature of BTRFS; all snapshots are created individually, that is to say, every snapshot stays in a single snapshot tree that
has only one snapshot. Compared to the volume snapshot of NFS using KVM's snapshot function, the BTRFS-ISCSI snapshot does
not rely on hypervisors. You can achieve the live-snapshot with any version of KVM, which is only available in Ubuntu1404 while using
NFS volume snapshot, because the restriction of the libivirt version.&lt;/p&gt;

&lt;h2&gt;Static IP Support&lt;/h2&gt;

&lt;p&gt;The 0.7 version allows users to specify static IPs when creating a new VM. The RC2 UI hasn't supported this feature,
but you can achieve it using zstack-cli. This feature is implemented based on ZStack's system tag system. You can provide static
IPs by system tags in format of:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;staticIp::{l3NetworkUuid}::{IP}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CreateVmInstance name=vm l3NetworkUuids=979520f7953a4c8bb77f90afe3b3d398,825c78d5e5454e17a6357cb618d7d226 defaultL3NetworkUuid=979520f7953a4c8bb77f90afe3b3d398 instanceOfferingUuid=4ec815360b0745b5b34d279405c4fcd7 imageUuid=be97815edffd41b78a5d30cab6e1fc1b systemTags=staticIp::979520f7953a4c8bb77f90afe3b3d398::192.168.0.10,staticIp::825c78d5e5454e17a6357cb618d7d226::10.10.1.10
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Update APIs&lt;/h2&gt;

&lt;p&gt;The 0.7 version adds APIs to update information of every resource. The new APIs are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;APIUpdateVmInstanceMsg
APIUpdateImageMsg
APIUpdateVolumeMsg
APIUpdateInstanceOfferingMsg
APIUpdateDiskOfferingMsg
APIUpdatePrimaryStorageMsg
APIUpdateVolumeSnapshotMsg
APIUpdateBackupStorageMsg
APIUpdateL3NetworkMsg
APIUpdateIpRangeMsg
APIUpdateL2NetworkMsg
APIUpdateClusterMsg
APIUpdateZoneMsg
APIUpdateHostMsg
APIUpdateIscsiFileSystemBackendPrimaryStorageMsg
APIUpdateKVMHostMsg
APIUpdateSftpBackupStorageMsg
APIUpdatePortForwardingRuleMsg
APIUpdateEipMsg
APIUpdateSecurityGroupMsg
APIUpdateVipMsg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All these APIs are very straightforward; you can use &lt;code&gt;zstack-cli&lt;/code&gt; and type &lt;em&gt;Tab&lt;/em&gt; key to check out their parameters. Detailed
explanation will be given in the &lt;a href=&quot;http://zstackdoc.readthedocs.org/en/latest/&quot;&gt;user manual&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Bug Fixes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/60&quot;&gt;can not only query status field for VmInstance&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/59&quot;&gt;IP arrange judgment has bug&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/54&quot;&gt;iscsi volume vm creation failure&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/50&quot;&gt;VM with iscsi volume can't be migrated in centos6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/47&quot;&gt;Delete iscsi volume snapshot failed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/46&quot;&gt;zstack management node shutdown due to: web listener issued context destroy event&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/45&quot;&gt;zstack management node start failure due to rabbitmq: Attempt to use closed channel&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/42&quot;&gt;backup iscsi volume snapshot doesn't support CreateDataVolumeFromVolumeSnapshot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/40&quot;&gt;iscsi volume doesn't support backup volume snapshot&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/26&quot;&gt;root volume's format is 'raw' if it's installed from ISO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/21&quot;&gt;Can not create guest vm from ISO image with iSCSI on Btrfs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/20&quot;&gt;Host status tracing has bug, which might wrongly change Host status from disconnected to connected&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/19&quot;&gt;primary storage capacity allocation and counting bug &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/17&quot;&gt;Feature Request: Primary Storage need to support iSCSI with backend filesystem BTRFS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/16&quot;&gt;Feature Request: Assign given IP (not DHCP random IP) to new created VM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zstackorg/zstack/issues/8&quot;&gt;Installation identify can't start management server for all-in-one&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Bug Report&lt;/h2&gt;

&lt;p&gt;If you find any bugs, please open a ticket on &lt;a href=&quot;https://github.com/zstackorg/zstack/issues&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jul 2015 00:00:00 -0700</pubDate>
        <link>http://zstack.org/blog/v0.7.html</link>
        <guid isPermaLink="true">http://zstack.org/blog/v0.7.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Announcing ZStack v0.7 RC2</title>
        <description>&lt;p&gt;Hello everyone, I am Frank Zhang, the architect of ZStack. Today I am happy to announce that ZStack v0.7.0 is in the release cycle.
Today we release 0.7.0 RC2 for you test.&lt;/p&gt;

&lt;h2&gt;Seamless Upgrade&lt;/h2&gt;

&lt;p&gt;Beginning at 0.7, ZStack supports seamless upgrade from previous versions. You can upgrade your setup with simple commands in a few
minutes.&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-warning&quot;&gt;
  &lt;h4&gt;Backup Database&lt;/h4&gt;
  
  Before performing any upgrade instructions, please backup the current database. This is very &lt;b&gt;IMPORTANT&lt;/b&gt;!
  Though ZStack will automatically backup the current database during upgrade, we strongly recommend you to manually backup the
  database in case any error happens. You can backup the database following:
  
  &lt;pre&gt;&lt;code&gt;mysqldump -u root -proot_password --host mysql_ip --port mysql_port zstack &gt; path_to_db_dump.sql&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Upgrade by quick script&lt;/h3&gt;

&lt;p&gt;If you have only one management node, you can upgrade it by ZStack's installation script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --no-check-certificate https://download.zstack.org/releases/0.7/zstack-install-0.7.0-rc2.sh
wget --no-check-certificate https://download.zstack.org/releases/0.7/zstack-all-in-one-0.7.0-rc2.tgz
bash zstack-install-0.7.0-rc2.sh -u -f zstack-all-in-one-0.7.0-rc2.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Be patient for a few minutes, the script will upgrade the database, management node, zstack-cli, zstack-ctl and zstack-dashboard.&lt;/p&gt;

&lt;h3&gt;Upgrade by zstack-ctl&lt;/h3&gt;

&lt;h4&gt;1. Upgrade the first management node&lt;/h4&gt;

&lt;p&gt;Perform below instructions on one of your management node:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p zstack-0.7-rc2
cd zstack-0.7-rc2
wget --no-check-certificate https://download.zstack.org/releases/0.7/rc2/zstackctl-0.7.tar.gz
/var/lib/zstack/virtualenv/zstackctl/bin/pip install --ignore-installed zstackctl-0.7.tar.gz

wget --no-check-certificate https://download.zstack.org/releases/0.7/rc2/zstack.war
zstack-ctl upgrade_management_node --war-file zstack.war
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once it finishes, the management node, zstack-cli, zstack-ctl are upgraded on the machine. You should see the below picture:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/1.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;h4&gt;2. Upgrade the database&lt;/h4&gt;

&lt;p&gt;Make sure you have backup the current database following instructions on the top of this page. Then perform:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_db
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In a few seconds, you should see the below picture:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/2.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  If you have only one management node, you can run &lt;pre&gt;&lt;code&gt;zstack-ctl start_node&lt;/code&gt;&lt;/pre&gt; to start the ZStack now. If you have
  other management nodes to upgrade, continue to perform following instructions.
&lt;/div&gt;


&lt;h4&gt;3. Upgrade other management nodes&lt;/h4&gt;

&lt;p&gt;If you have management nodes running on remote machines, run below commands for each node&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_management_node --war-file path_to_the_war --host remote_host_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;4. Upgrade UI&lt;/h4&gt;

&lt;p&gt;Upgrade your UI on local machine by:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui --host remote_machine_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if the UI is installed on a remote machine.&lt;/p&gt;

&lt;h4&gt;5. Start management nodes&lt;/h4&gt;

&lt;p&gt;Now all your management nodes have been successfully upgraded to the 0.7 RC2. You can start them by &lt;code&gt;zstack-ctl start_node&lt;/code&gt; and
&lt;code&gt;zstack-ctl start_node --remote remote_host_ip&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;Agents will be automatically upgraded after starting management nodes&lt;/h4&gt;
  You don't need to bother with agent upgrade; they will be upgraded after management nodes reconnect them.
&lt;/div&gt;


&lt;h2&gt;Built-in PyPi Index&lt;/h2&gt;

&lt;p&gt;Many users reported that agents installation sometimes failed because the Python PyPi index was not always available.
In 0.7, we pull out all our Python dependencies and build a PyPi index inside the management node. All agents and tools
installation will NOT reply on the Python PyPi on the public network anymore. Because of that, the zstack.war gets much
bigger(~80M) than before; but we still think it's worthy, because it stable and fast the installation of agents and tools.&lt;/p&gt;

&lt;h2&gt;New ISCSI Primary Storage Support&lt;/h2&gt;

&lt;p&gt;The 0.7 version supports ISCSI as primary storage. The default ISCSI server is based on a Linux machine with a BTRFS filesystem.
Follow the &lt;a href=&quot;https://www.howtoforge.com/a-beginners-guide-to-btrfs&quot;&gt;tutorial&lt;/a&gt; to prepare a Linux machine with a BTRFS filesystem,
the following instructions assume the BTRFS filesystem is mounted on /home/btrfs&lt;/p&gt;

&lt;p&gt;On the UI, go to &quot;Primary Storage&quot; page then click the button &quot;New Primary Storage&quot; to add the ISCSI primary storage:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/3.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;After adding, double click the primary storage you can see detailed information:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/4.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;The BTRFS-ISCSI primary storage supports all features you can expect. For the volume snapshot, ZStack leverages the copy-on-write
feature of BTRFS; all snapshots are created individually, that is to say, every snapshot stays in a single snapshot tree that
has only one snapshot. Compared to the volume snapshot of NFS using KVM's snapshot function, the BTRFS-ISCSI snapshot does
not rely on hypervisors. You can achieve the live-snapshot with any version of KVM, which is only available in Ubuntu1404 while using
NFS volume snapshot, because the restriction of the libivirt version.&lt;/p&gt;

&lt;h2&gt;Static IP Support&lt;/h2&gt;

&lt;p&gt;The 0.7 version allows users to specify static IPs when creating a new VM. The RC2 UI hasn't supported this feature,
but you can achieve it using zstack-cli. This feature is implemented based on ZStack's system tag system. You can provide static
IPs by system tags in format of:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;staticIp::{l3NetworkUuid}::{IP}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CreateVmInstance name=vm l3NetworkUuids=979520f7953a4c8bb77f90afe3b3d398,825c78d5e5454e17a6357cb618d7d226 defaultL3NetworkUuid=979520f7953a4c8bb77f90afe3b3d398 instanceOfferingUuid=4ec815360b0745b5b34d279405c4fcd7 imageUuid=be97815edffd41b78a5d30cab6e1fc1b systemTags=staticIp::979520f7953a4c8bb77f90afe3b3d398::192.168.0.10,staticIp::825c78d5e5454e17a6357cb618d7d226::10.10.1.10
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Update APIs&lt;/h2&gt;

&lt;p&gt;The 0.7 version adds APIs to update information of every resource. The new APIs are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;APIUpdateVmInstanceMsg
APIUpdateImageMsg
APIUpdateVolumeMsg
APIUpdateInstanceOfferingMsg
APIUpdateDiskOfferingMsg
APIUpdatePrimaryStorageMsg
APIUpdateVolumeSnapshotMsg
APIUpdateBackupStorageMsg
APIUpdateL3NetworkMsg
APIUpdateIpRangeMsg
APIUpdateL2NetworkMsg
APIUpdateClusterMsg
APIUpdateZoneMsg
APIUpdateHostMsg
APIUpdateIscsiFileSystemBackendPrimaryStorageMsg
APIUpdateKVMHostMsg
APIUpdateSftpBackupStorageMsg
APIUpdatePortForwardingRuleMsg
APIUpdateEipMsg
APIUpdateSecurityGroupMsg
APIUpdateVipMsg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All these APIs are very straightforward; you can use &lt;code&gt;zstack-cli&lt;/code&gt; and type &lt;em&gt;Tab&lt;/em&gt; key to check out their parameters. Detailed
explanation will be given in the &lt;a href=&quot;http://zstackdoc.readthedocs.org/en/latest/&quot;&gt;user manual&lt;/a&gt; once 0.7 GA is released.&lt;/p&gt;

&lt;h2&gt;Bug Report&lt;/h2&gt;

&lt;p&gt;If you find any bugs, please open a ticket on &lt;a href=&quot;https://github.com/zstackorg/zstack/issues&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Jun 2015 00:00:00 -0700</pubDate>
        <link>http://zstack.org/cn/blog/v0.7-rc2.html</link>
        <guid isPermaLink="true">http://zstack.org/cn/blog/v0.7-rc2.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Announcing ZStack v0.7 RC2</title>
        <description>&lt;p&gt;Hello everyone, I am Frank Zhang, the architect of ZStack. Today I am happy to announce that ZStack v0.7.0 is in the release cycle.
Today we release 0.7.0 RC2 for you test.&lt;/p&gt;

&lt;h2&gt;Seamless Upgrade&lt;/h2&gt;

&lt;p&gt;Beginning at 0.7, ZStack supports seamless upgrade from previous versions. You can upgrade your setup with simple commands in a few
minutes.&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-warning&quot;&gt;
  &lt;h4&gt;Backup Database&lt;/h4&gt;
  
  Before performing any upgrade instructions, please backup the current database. This is very &lt;b&gt;IMPORTANT&lt;/b&gt;!
  Though ZStack will automatically backup the current database during upgrade, we strongly recommend you to manually backup the
  database in case any error happens. You can backup the database following:
  
  &lt;pre&gt;&lt;code&gt;mysqldump -u root -proot_password --host mysql_ip --port mysql_port zstack &gt; path_to_db_dump.sql&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;Upgrade by quick script&lt;/h3&gt;

&lt;p&gt;If you have only one management node, you can upgrade it by ZStack's installation script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget --no-check-certificate https://download.zstack.org/releases/0.7/zstack-install-0.7.0-rc2.sh
wget --no-check-certificate https://download.zstack.org/releases/0.7/zstack-all-in-one-0.7.0-rc2.tgz
bash zstack-install-0.7.0-rc2.sh -u -f zstack-all-in-one-0.7.0-rc2.tgz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Be patient for a few minutes, the script will upgrade the database, management node, zstack-cli, zstack-ctl and zstack-dashboard.&lt;/p&gt;

&lt;h3&gt;Upgrade by zstack-ctl&lt;/h3&gt;

&lt;h4&gt;1. Upgrade the first management node&lt;/h4&gt;

&lt;p&gt;Perform below instructions on one of your management node:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p zstack-0.7-rc2
cd zstack-0.7-rc2
wget --no-check-certificate https://download.zstack.org/releases/0.7/rc2/zstackctl-0.7.tar.gz
/var/lib/zstack/virtualenv/zstackctl/bin/pip install --ignore-installed zstackctl-0.7.tar.gz

wget --no-check-certificate https://download.zstack.org/releases/0.7/rc2/zstack.war
zstack-ctl upgrade_management_node --war-file zstack.war
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once it finishes, the management node, zstack-cli, zstack-ctl are upgraded on the machine. You should see the below picture:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/1.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;h4&gt;2. Upgrade the database&lt;/h4&gt;

&lt;p&gt;Make sure you have backup the current database following instructions on the top of this page. Then perform:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_db
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In a few seconds, you should see the below picture:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/2.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  If you have only one management node, you can run &lt;pre&gt;&lt;code&gt;zstack-ctl start_node&lt;/code&gt;&lt;/pre&gt; to start the ZStack now. If you have
  other management nodes to upgrade, continue to perform following instructions.
&lt;/div&gt;


&lt;h4&gt;3. Upgrade other management nodes&lt;/h4&gt;

&lt;p&gt;If you have management nodes running on remote machines, run below commands for each node&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl upgrade_management_node --war-file path_to_the_war --host remote_host_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;h4&gt;4. Upgrade UI&lt;/h4&gt;

&lt;p&gt;Upgrade your UI on local machine by:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;zstack-ctl install_ui --host remote_machine_ip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;if the UI is installed on a remote machine.&lt;/p&gt;

&lt;h4&gt;5. Start management nodes&lt;/h4&gt;

&lt;p&gt;Now all your management nodes have been successfully upgraded to the 0.7 RC2. You can start them by &lt;code&gt;zstack-ctl start_node&lt;/code&gt; and
&lt;code&gt;zstack-ctl start_node --remote remote_host_ip&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;bs-callout bs-callout-info&quot;&gt;
  &lt;h4&gt;Agents will be automatically upgraded after starting management nodes&lt;/h4&gt;
  You don't need to bother with agent upgrade; they will be upgraded after management nodes reconnect them.
&lt;/div&gt;


&lt;h2&gt;Built-in PyPi Index&lt;/h2&gt;

&lt;p&gt;Many users reported that agents installation sometimes failed because the Python PyPi index was not always available.
In 0.7, we pull out all our Python dependencies and build a PyPi index inside the management node. All agents and tools
installation will NOT reply on the Python PyPi on the public network anymore. Because of that, the zstack.war gets much
bigger(~80M) than before; but we still think it's worthy, because it stable and fast the installation of agents and tools.&lt;/p&gt;

&lt;h2&gt;New ISCSI Primary Storage Support&lt;/h2&gt;

&lt;p&gt;The 0.7 version supports ISCSI as primary storage. The default ISCSI server is based on a Linux machine with a BTRFS filesystem.
Follow the &lt;a href=&quot;https://www.howtoforge.com/a-beginners-guide-to-btrfs&quot;&gt;tutorial&lt;/a&gt; to prepare a Linux machine with a BTRFS filesystem,
the following instructions assume the BTRFS filesystem is mounted on /home/btrfs&lt;/p&gt;

&lt;p&gt;On the UI, go to &quot;Primary Storage&quot; page then click the button &quot;New Primary Storage&quot; to add the ISCSI primary storage:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/3.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;After adding, double click the primary storage you can see detailed information:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/0.7/4.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;

&lt;p&gt;The BTRFS-ISCSI primary storage supports all features you can expect. For the volume snapshot, ZStack leverages the copy-on-write
feature of BTRFS; all snapshots are created individually, that is to say, every snapshot stays in a single snapshot tree that
has only one snapshot. Compared to the volume snapshot of NFS using KVM's snapshot function, the BTRFS-ISCSI snapshot does
not rely on hypervisors. You can achieve the live-snapshot with any version of KVM, which is only available in Ubuntu1404 while using
NFS volume snapshot, because the restriction of the libivirt version.&lt;/p&gt;

&lt;h2&gt;Static IP Support&lt;/h2&gt;

&lt;p&gt;The 0.7 version allows users to specify static IPs when creating a new VM. The RC2 UI hasn't supported this feature,
but you can achieve it using zstack-cli. This feature is implemented based on ZStack's system tag system. You can provide static
IPs by system tags in format of:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;staticIp::{l3NetworkUuid}::{IP}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;CreateVmInstance name=vm l3NetworkUuids=979520f7953a4c8bb77f90afe3b3d398,825c78d5e5454e17a6357cb618d7d226 defaultL3NetworkUuid=979520f7953a4c8bb77f90afe3b3d398 instanceOfferingUuid=4ec815360b0745b5b34d279405c4fcd7 imageUuid=be97815edffd41b78a5d30cab6e1fc1b systemTags=staticIp::979520f7953a4c8bb77f90afe3b3d398::192.168.0.10,staticIp::825c78d5e5454e17a6357cb618d7d226::10.10.1.10
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Update APIs&lt;/h2&gt;

&lt;p&gt;The 0.7 version adds APIs to update information of every resource. The new APIs are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;APIUpdateVmInstanceMsg
APIUpdateImageMsg
APIUpdateVolumeMsg
APIUpdateInstanceOfferingMsg
APIUpdateDiskOfferingMsg
APIUpdatePrimaryStorageMsg
APIUpdateVolumeSnapshotMsg
APIUpdateBackupStorageMsg
APIUpdateL3NetworkMsg
APIUpdateIpRangeMsg
APIUpdateL2NetworkMsg
APIUpdateClusterMsg
APIUpdateZoneMsg
APIUpdateHostMsg
APIUpdateIscsiFileSystemBackendPrimaryStorageMsg
APIUpdateKVMHostMsg
APIUpdateSftpBackupStorageMsg
APIUpdatePortForwardingRuleMsg
APIUpdateEipMsg
APIUpdateSecurityGroupMsg
APIUpdateVipMsg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All these APIs are very straightforward; you can use &lt;code&gt;zstack-cli&lt;/code&gt; and type &lt;em&gt;Tab&lt;/em&gt; key to check out their parameters. Detailed
explanation will be given in the &lt;a href=&quot;http://zstackdoc.readthedocs.org/en/latest/&quot;&gt;user manual&lt;/a&gt; once 0.7 GA is released.&lt;/p&gt;

&lt;h2&gt;Bug Report&lt;/h2&gt;

&lt;p&gt;If you find any bugs, please open a ticket on &lt;a href=&quot;https://github.com/zstackorg/zstack/issues&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 24 Jun 2015 00:00:00 -0700</pubDate>
        <link>http://zstack.org/blog/v0.7-rc2.html</link>
        <guid isPermaLink="true">http://zstack.org/blog/v0.7-rc2.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>如果软件测试是门艺术，软件测试工程师就是艺术家 －－ 浅析ZStack是如何做智能软件测试</title>
        <description>&lt;p&gt;目前各个软件公司都很重视自动化软件测试。甚至会把软件测试自动化率（自动化测试用例占整个测试用例的比例）作为软件测试人员（也叫质量保证工程师）绩效考核的内容之一。追求自动化测试比例的初衷是很好的，但是不顾软件产品的实际情况和软件测试人员的情况，而过分追求高的测试自动化比例，会得到适得其反的效果。我们常常会听到某软件的自动化测试率高达70～80%，可是还是不得不聘请大量的测试人员来进行手动测试。这在无形之中把软件测试引入了误区。&lt;/p&gt;

&lt;p&gt;&lt;img  class=&quot;img-responsive&quot;  src=&quot;/images/blogs/testing/automation-test-ratio.jpg&quot;&gt;&lt;/p&gt;

&lt;p&gt;ZStack的测试架构师认为，软件自动化测试的好坏可以用软件缺陷的发现的比率来衡量。换句话说如果整个系统的自动化测试比例达到80%，那么通过自动化测试发现软件缺陷的数量应该达到甚至超过全部软件缺陷数量的80%。举个例子，iSCSI主存储是即将发布的ZStack 0.7版本的重要功能。ZStack现有的自动化测试用例在没有修改一行代码的情况下，就可以用于测试iSCSI主存储的功能。之前开发人员手动测试没有发现的软件缺陷，但是用自动化测试用例发现了5个缺陷。这个就是非常有效的自动化测试用例。&lt;/p&gt;

&lt;p&gt;ZStack对软件质量非常看重，因为我们深知人是最聪明也是最不可靠的（以后我们也许可以探讨一下人性与软件测试的香相关话题），所以从整个软件设计的开始，ZStack就决定尽可能的依靠全自动的测试手段来探测各种可能出现的软件缺陷。&lt;/p&gt;

&lt;p&gt;传统的自动化测试有一个优势就是每轮测试都会严格执行之前定义好的全部测试用例，无一遗漏。通过对前后测试结果的比较，就可以得出质量的变化情况。不过这个优势也是它的弱点。设计软件测试的人员都知道，由于无法穷举所有的测试可能，所以预先设计的测试用例也只能覆盖一部分最常见（或者说是测试人员最希望测试到）的领域。那么对于没有测试到的领域就无法确定其是否存在软件缺陷。这个问题该怎么破呢？为此，ZStack的自动化测试特别引入了一种特别的测试－－基于模型的测试（Model-based Testing)。&lt;/p&gt;

&lt;p&gt;&lt;img  class=&quot;img-responsive&quot;  src=&quot;/images/blogs/testing/model-based-test.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;基于模型的测试是一种人工智能的测试方法，可以用于自动的构造测试场景和测试用例。它要求测试人员首先基于软件功能构造出各种模型（或者叫做行为），然后制定行为和行为之间的关系以及行为和系统的关系（有限状态机），之后自动测试系统就可以智能的根据当前的被测系统的状态（场景）以及预设的规则，选择下一步要执行的行为。理论上这种测试方法可以尽可能的遍历被测试系统中各种可能经历的行为链，从而极大的提高了测试覆盖率。由于它每次执行的路径和以往不同，所以可以构造出完全不同的测试用例，我们也可以称之为智能的软件测试。&lt;/p&gt;

&lt;p&gt;下面，我们来大致看看ZStack是怎么构造基于模型的测试的。不过首先我们要说明的是，整个基于模型测试的难点在于提取测试模型，以及编写测试模型验证代码，而非基于模型的测试框架本身和模型算法。所以以后遇到推销基于模型测试“框架”的人，千万不要觉得他们牛的一塌糊涂，真正牛的是实现具体测试的人，而非框架本身。实现测试系统的工程师才是真正的英雄。换句话说，虽然现实中有一些现成的基于模型的测试的框架，但是如果其他IaaS想要重现ZStack的智能测试也绝非易事。&lt;/p&gt;

&lt;p&gt;&lt;img  class=&quot;img-responsive&quot;  src=&quot;/images/blogs/testing/vm-transition-table.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;ZStack基于模型的测试首先就是要把各种IaaS操作定义成模型。这里我们拿虚拟机实例的各种操作举例。虚拟机实例通常只有4个状态，状态和状态之间可以定义标准的操作。把状态和操作画出来后，我们就得到了虚拟机实例的状态迁移图（有限状态机）。可以看到上图中Running和Stopped的状态之间可以通过stop和start操作做成状态环。那么智能测试就可以根据预先设定的规则，可能会让虚拟机在这个环里做有限的测试。这一个看起来好像很简单，但是要知道IaaS里面还有很多其他资源的状态迁移图。而且很多资源之间是有相互依赖关系的，例如在某些系统中只有虚拟机处于Stopped的状态才可以做磁盘快照。而且用户在操作IaaS的时候，也不会只做虚拟机状态的改变，通常会和其他资源的actions混合操作。所有当把所有资源的迁移图画完，就会发现整个IaaS的场景和可选的行为之间的关系还是非常非常复杂的。ZStack的测试工程师可是花费了不少的时间来完成这项艰巨的工作。&lt;/p&gt;

&lt;p&gt;&lt;img  class=&quot;img-responsive&quot;  src=&quot;/images/blogs/testing/random-scheduler.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;当创造完场景和行为关系图后，智能测试就可以开始最初的测试工作。一开始的时候，它的智力水平并不高，只能从当前可执行的所有操作中随机的选择一个操作。极端情况，这可能会导致它一直在虚拟机实例的操作中绕圈子，而有些操作从来就没有执行过。慢慢的ZStack工程师就开始给他添加了两个更高的智慧：公平调度算法和基于历史测试路径的调度算法。&lt;/p&gt;

&lt;p&gt;&lt;img  class=&quot;img-responsive&quot;  src=&quot;/images/blogs/testing/fair-scheduler.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;公平调度算法会让智能测试系统尽量选择最少执行的行为作为下一个操作。&lt;/p&gt;

&lt;p&gt;&lt;img  class=&quot;img-responsive&quot;  src=&quot;/images/blogs/testing/path-coverage-scheduler.png&quot;&gt;&lt;/p&gt;

&lt;p&gt;而基于历史测试路径的算法可以让智能系统选择曾经没有测试过的路径。有了这两种更加智能的调度算法，智能测试系统也就可以更好的发挥它的能力，未来ZStack的测试工程师们还会设计出一些更高级的复合测试算法，来增加智能测试系统的智商。除了发现一些常规的问题外，通过基于模型的测试还发现了不少我们称之为Corner Case的缺陷，它们可能是90%的ZStack用户永远也不会触发的问题。虽说是corner case，但是一旦在开发的阶段没有发现，等到用户遇到的时候，就会花费很大的力气来修复，有一些可能还是致命的。所以这种基于模型的智能测试给ZStack带来了很大的好处。&lt;/p&gt;

&lt;p&gt;基于模型的测试和ZStack的另外两大自动化测试系统：集成测试和系统测试构成了ZStack质量控制的三驾马车。在当今DevOps当道的今天，我们希望ZStack的测试和研发投入比力求做到1:1（以后我们也许可以和大家交流为什么纯粹的靠开发人员来做测试是有问题的） ，我们希望把软件质量永远放在ZStack的第一位。&lt;/p&gt;

&lt;p&gt;希望今天浅析的ZStack智能测试方法能给广大软件质量保证师从实践角度带来一些好的想法。最后我们想要感谢全世界的软件测试工程师，感谢你们在每一件软件产品后面付出的辛苦努力！&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Jun 2015 00:00:00 -0700</pubDate>
        <link>http://zstack.org/cn/test-is-king.html</link>
        <guid isPermaLink="true">http://zstack.org/cn/test-is-king.html</guid>
        
        
        <category>cn</category>
        
      </item>
    
      <item>
        <title>Intel is ZStack's partner now</title>
        <description>&lt;p&gt;Today we are glad to announce that Intel, the world's largest and highest valued semiconductor chip maker, becomes ZStack's partner!
Intel has been investigating many resources in the cloud computing, including help open source technology to create enterprise-ready
IaaS infrastructure. ZStack, as its leading IaaS technology brings a lot of potential for future enterprise cloud, gets much attention
from Intel and finally becomes Intel's partner in IaaS area.&lt;/p&gt;

&lt;p&gt;Leveraging Intel's support, ZStack will continue to focus on building deployable, maintainable, and flexible IaaS software,
helping enterprises move IT infrastructure into the cloud era.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../images/zstack-intel.png&quot; class=&quot;center-img img-responsive&quot;&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Jun 2015 00:00:00 -0700</pubDate>
        <link>http://zstack.org/blog/intel.html</link>
        <guid isPermaLink="true">http://zstack.org/blog/intel.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
